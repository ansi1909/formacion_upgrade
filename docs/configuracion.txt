1. Descomprimir todo el directorio formacion2.0 en la carpeta web del servidor.

2. Otorgar permisos de usuarios sobre el directorio del proyecto:
	chown -R www-data.www-data formacion2.0/
	chmod -R 777 formacion2.0/

3. En el servidor web debe existir adicionalmente los siguientes directorios, con permisos de escritura:
	uploads/
		recursos/						# Aquí se podrían almacenan imágenes y videos subidos desde el ckeditor en mensajes de bienvenida
			usuarios/					# Aquí se almacenan las fotos de perfil de los usuarios
			niveles/					# Aquí se almacenan los archivos Excel de los niveles por empresa
			paginas/					# Aquí se almacenan los archivos de las páginas
			noticias/					# Aquí se almacenan los archivos de las noticias
			notificaciones/				# Aquí se almacenan los archivos de las notificaciones
			tutoriales/					# Aquí se almacenan los archivos de los tutoriales
			participantes/				# Aquí se almacenan los archivos excel de los participantes
			certificados/				# Aquí se almacenan los archivos de los certificados
			empresas/					# Aquí se almacenan los archivos provenientes del ckeditor en el registro de empresas
			espacio/					# Aquí se almacenan los archivos del espacio colaborativo
			qr/							# Aquí se almacenan las imágenes del código QR que se generan de los certificados
			reportes/					# Aquí se escribirán los reportes en Excel o PDF generados de las consultas
			tmp/						# Aquí se guardan temporalmente los certificados generados de forma masiva
			thumbnails/					# Aquí se almacenan los archivos para los thumbnails de las plantillas
										# 	OJO: Podemos importar las imágenes iniciales a este directorio desde docs/prototipos/front/thumbnails
			decorate_certificado.png	# Tomar la imagen de web/front/assets/img/
			logo_formacion_smart.png	# Tomar la imagen de web/img/

4. Las constantes globales para twig están seteadas en app/config/config.yml:
	minlenght_bienvenida: Cantidad mínima de caracteres que debe tener el mensaje de bienvenida
    root_path: Directorio raíz del kernel (En este caso app/)
    uploads: Dirección http del directorio uploads (Para las imágenes y videos)
    sesion_time: Cantidad de segundos en que expira la sesión en caso de inactividad

5. Las constantes para controllers están seteadas en app/config/parametros.yml

6. Los parámetros de conexión a base de datos y servidor de correo están seteadas en app/config/parameters.yml

7. Versión mínima de PHP que debe estar instalada: 5.6.25

8. Base de datos con Postgres 9.4. Usuario de postgres con clave 123456.

9. Activar las siguientes extensiones PHP php.ini, tanto en el del apache como el del php:
	- php_curl
	- php_intl
	- php_pdo_pgsql
	- php_pgsql

10. Instalar composer y correr el siguiente comando para incluir las librerías de PHPExcel:
	composer require liuggio/excelbundle

11. Importar los siguientes sql en la consola de postgres, siguiendo este orden:
	- definition.sql
	- indices.sql
	- listas.sql
	- data_prueba.sql
	- funciones/fnasignar_subpaginas
	- funciones/fnavance_programa.sql
	- funciones/fncantidad_programados.sql
	- funciones/fncarga_participantes.sql
	- funciones/fncerrar_sesiones.sql
	- funciones/fnconexion_usuario.sql
	- funciones/fnevaluaciones_modulo.sql
	- funciones/fnhoras_conexion.sql
	- funciones/fnimportar_participantes.sql
	- funciones/fningresos_sistema.sql
	- funciones/fninteraccion_espacio_colaborativo.sql
	- funciones/fninteraccion_muro.sql
	- funciones/fnlistado_participantes.sql
	- funciones/fnnotificacion_programada.sql
	- funciones/fnrecordatorios_usuarios.sql
	- funciones/fnreporte_general.sql
	- funciones/fnreporte_general2.sql
	- funciones/fnresumen_general.sql
	- funciones/fnusuarios_conectados.sql
	- funciones/fnasignar_subpaginas.sql
	- funciones/fncorreos_noentregados.sql
	- funciones/fnalarmas_participantes.sql
	- funciones/fneliminar_prueba.sql
	- funciones/fneliminar_asignacion.sql
	- funciones/fnmigrar_programa.sql
	- funciones/fnlistado_notificaciones_programadas.sql
	- funciones/fnlistado_participantes_correos.sql
	- funciones/fnlistado_certificados.sql
	- vistas/view_cursos.sql
	- vistas/view_pruebas.sql
	- vistas/view_usuarios_roles.sql

	OJO: El archivo reserialize_tables.sql se importará solo cuando se haya corrido el comando de symfony:
		 php bin/console doctrine:schema:update --force
		 Lo cual permite cambiar los id de las tablas al tipo serial.

12. Aumentar las cantidad de memoria PHP de las siguientes variables en php.ini:
	memory_limit = 128M
	post_max_size = 80M
	upload_max_filesize = 80M
	max_file_uploads = 20

13. Para debugg se puede setear las siguientes variables en php.ini
	xdebug.var_display_max_depth = -1
	xdebug.var_display_max_children = -1
	xdebug.var_display_max_data = -1

14. URL backend: http://localhost/formacion2.0/web/app_dev.php/admin/

15. Al subir al server configurar variable
		auto_generate_proxy_classes: "%kernel.debug%"
	en config.yml, actualmente está en false porque estamos trabajando en entorno windows

16. En el php.ini setear allow_url_fopen = On

17. Instalación del compilador de SASS en Windows:
	a. Descargar e instala Ruby de: http://rubyinstaller.org/
	b. En la terminal ejecutar: gem install sass
	c. Se puede confirmar la instalación con: sass -v
	d. Correr el comando:
	   		where sass 		--> En ambiente Windows
	   		which sass 		--> En ambiente Linux
	   Con el resultado, reemplazar la constante ['parameters']['comandos']['sass'] en app/config/parameters.yml

---------------------------------------------------------------------------------------------------------
OJO: Cuando se instaló el Bundle de html2pdf generó el siguiente warning:
Package phpoffice/phpexcel is abandoned, you should avoid using it. Use phpoffice/phpspreadsheet instead.
---------------------------------------------------------------------------------------------------------

18. Los cron jobs deben programarse bajo las siguientes frecuencia
	a. php bin/console link:cerrar-sesiones				--> Cada hora
	b. php bin/console link:espacio-colaborativo		--> Cada hora
	c. php bin/console link:evento						--> Diariamente a las 02:00
	d. php bin/console link:recordatorio-programados	--> Diariamente a las 03:00
	e. php bin/console link:correos-fallidos            --> Diariamente a las 04:00


19. Para la configuración del CKFinder, ajustar los valores en web/assets/vendor/ckfinder/config.php

20 . Comandos para ejecutar desde consola
   a. php bin/console link:usuarios-duplicados: debe pasarse como parametro el id de la  empresa para la cual desea realizarse la consulta ejemplo :
   --Ejemplo:
   php bin/console link:usuarios-duplicados 19

21 . Funciones para mantenimiento y limpieza de la base de datos :
     fneliminar_prueba.sql: Se ejecuta diractemente en la consola del
     motor de base de datos de la siguiente manera:
     SELECT * from fneliminar_pagina(pagina_id);
     sonde pagina_id es el id del curso/pagina que se desea eliminar, Esta funcion elimina todo rastro de dicha pagina de las tablas:
     - certi_pagina_log
     - certi_grupo_pagina
     - certi_muro
     - certi_foro
     - certi_foro_archivo
     - certi_nivel_pagina
     - certi_pagina_empresa
     - certi_prueba
     - certi_pregunta_asociacion
     - certi_pregunta_opcion
     - certi_respuesta
     - certi_prueba_log
     - certi_pregunta
     - certi_opcion
     - certi_pagina

     NOTA: esta funcion debe ejecutarse con mucha precaucion ya que es capaz de eliminar a un curso/pgrograma completamente de las tablas

     SELECT * from fneliminar_prueba(prueba_id):
     Elimina una prueba de la base de datos

     SELECT * from fnmigrar_programa(programa_id):
     Se ejecuta en la base de datos de quality y se encarga
     de copiar el programa a la base de datos de produccion.
     En el caso de los contenidos que posean video deberan cargarse
     Manualmente, la funcion luego de correr con exito muestra los ids
     de las paginas que poseen video en su contenido.


